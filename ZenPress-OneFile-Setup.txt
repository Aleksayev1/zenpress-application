====================================================
ZENPRESS - SETUP COMPLETO EM UM ARQUIVO
====================================================

COPIE E COLE ESTE CONTE√öDO NO GOOGLE DRIVE:

====================================================
1. DOCKER-COMPOSE.YML
====================================================

version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: zenpress_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=zenpress
    volumes:
      - mongodb_data:/data/db

  backend:
    build: ./backend
    container_name: zenpress_backend
    restart: unless-stopped
    ports:
      - "8001:8001"
    depends_on:
      - mongodb
    environment:
      - MONGO_URL=mongodb://mongodb:27017/zenpress
      - JWT_SECRET=your-jwt-secret-key-here
      - STRIPE_API_KEY=sk_test_your_stripe_key_here
      - PIX_KEY=aleksayev@gmail.com

  frontend:
    build: ./frontend
    container_name: zenpress_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8001

  mobile:
    build: ./mobile
    container_name: zenpress_mobile
    restart: unless-stopped
    ports:
      - "8082:8082"

volumes:
  mongodb_data:

====================================================
2. INSTALL.SH
====================================================

#!/bin/bash
echo "üåü Instalando ZenPress..."
docker-compose up -d --build
echo "‚úÖ ZenPress instalado!"
echo "üåê Acesse: http://localhost:3000"
echo "üì± Mobile: http://localhost:8082"
echo "üîß API: http://localhost:8001"

====================================================
3. BACKEND/DOCKERFILE
====================================================

FROM python:3.11-slim

WORKDIR /app

RUN apt-get update && apt-get install -y gcc && rm -rf /var/lib/apt/lists/*

COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

COPY . .

EXPOSE 8001

CMD ["python", "-m", "uvicorn", "server:app", "--host", "0.0.0.0", "--port", "8001", "--reload"]

====================================================
4. BACKEND/REQUIREMENTS.TXT
====================================================

fastapi==0.104.1
uvicorn==0.24.0
pymongo==4.6.0
python-jose[cryptography]==3.3.0
passlib[bcrypt]==1.7.4
python-multipart==0.0.6
stripe==7.6.0
qrcode==7.4.2
Pillow==10.1.0
python-dotenv==1.0.0
bcrypt==4.1.2
motor==3.3.2

====================================================
5. FRONTEND/DOCKERFILE
====================================================

FROM node:18-alpine

WORKDIR /app

COPY package*.json ./
RUN npm install

COPY . .

EXPOSE 3000

CMD ["npm", "start"]

====================================================
6. FRONTEND/PACKAGE.JSON
====================================================

{
  "name": "zenpress-frontend",
  "version": "1.0.0",
  "private": true,
  "dependencies": {
    "@testing-library/jest-dom": "^5.16.4",
    "@testing-library/react": "^13.3.0",
    "@testing-library/user-event": "^13.5.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.3.0",
    "react-i18next": "^11.17.0",
    "i18next": "^21.8.13",
    "axios": "^0.27.2",
    "react-scripts": "5.0.1",
    "tailwindcss": "^3.1.6",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}

====================================================
7. MOBILE/DOCKERFILE
====================================================

FROM node:18-alpine

WORKDIR /app

RUN npm install -g @expo/cli

COPY package*.json ./
RUN npm install

COPY . .

EXPOSE 8082

CMD ["npx", "expo", "start", "--web", "--port", "8082", "--host", "0.0.0.0"]

====================================================
8. MOBILE/PACKAGE.JSON
====================================================

{
  "name": "zenpress-mobile",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "start": "expo start",
    "android": "expo start --android",
    "ios": "expo start --ios",
    "web": "expo start --web"
  },
  "dependencies": {
    "expo": "~51.0.28",
    "expo-status-bar": "~1.12.1",
    "react": "18.2.0",
    "react-native": "0.74.5",
    "react-native-web": "~0.19.10",
    "react-dom": "18.2.0",
    "@expo/webpack-config": "^19.0.1",
    "@expo/vector-icons": "^14.0.2",
    "expo-linear-gradient": "~13.0.2",
    "react-native-reanimated": "~3.10.1"
  },
  "devDependencies": {
    "@babel/core": "^7.20.0"
  },
  "private": true
}

====================================================
INSTRU√á√ïES DE USO:
====================================================

1. COPIE este arquivo completo para o Google Drive
2. No seu computador, crie uma pasta: ZenPress-Complete
3. Crie os arquivos conforme as se√ß√µes acima
4. Execute: chmod +x install.sh && ./install.sh
5. Acesse: http://localhost:3000

FUNCIONALIDADES INCLU√çDAS:
‚úÖ Backend completo com APIs
‚úÖ Frontend React responsivo
‚úÖ Mobile App com Expo
‚úÖ Sistema de pagamentos
‚úÖ Docker setup completo
‚úÖ Documenta√ß√£o inclusa

VERS√ÉO: 1.0.0
CRIADO: 17/01/2025
CONTATO: aleksayev@gmail.com

====================================================